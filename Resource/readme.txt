CSS 

--------------------------------

1. css介绍 

html 结构  css 样式 js 交互 

css 主要是负责根据html结构来对html进行美化的，层叠样式表

2. 核心

层叠  css样式都是依赖层叠存在的。


3. css使用方式 

	① style属性
		<p style="color:red;"><p>

		Tip:css语句的最后一定要加分号，因为分号是css的语句结束符

	② style 标签  

		style这一组标签必须写在head标签的内部。
		<head>
			<style>
				css code.......
			</style>
		</head>

	③ link 标签  
		从外部链接引入一个单独的css文件 
		Tip：单独的css文件里面全部都是css的代码并且文件的后缀名是.css

		<link  rel='stylesheet' href='css路径'>

		我们在实际开发的时候，应该更多的采用第三种方式，因为目前为了提高可维护性，提倡结构(html)与样式(css)
		分离。


	④  @import url()

	第四种使用方式必须放在style 标签里面。


		与link标签的区别：
		1. 运行顺序不一样，link是按照正常的由上向下的顺序解析。而import 是在当前的网页加载完成之后再去读取

		2. import 是由css提出来的，而link 是 xhtml提出来的。

		3. 兼容性 -- import 可以随意的去使用兼容性良好  而 link 在ie45中存在兼容问题。 


4. 选择器  

	基础选择器  

	html 标签选择器 
		根据html标签来选取元素  缺点是选取的元素不够精确  
		p {}  

	class 选择器
		通过在标签中添加class属性 设定属性值，在css中同归.class属性值 来查找元素
		精确程度比较高并且class是全局属性，

		.d1 {color:red;}

		div  class='d1'   ----> 字体颜色  red

		p   class='d1 '   ---- > 字体颜色红色
 
	id     选择器 

		通过在标签中添加全局属性id 并且设置id的属性值，在css中使用#id值得方式来设置元素的css
		精确程度最高，因为id虽然是全局的，但是却具有唯一性。

		#d1 {color:red;}


		Tip:无论是class的名字 ，还是id的名字，我们在给他们设置属性值得时候必须要设置一些有意义的名字


	Tip:不要试图通过一个类名就把所有的样式写完整，一个标签通常情况下会携带多个类，这些类里面的css样式共同
	造就了最后标签的显示效果。
	我们在使用类的时候尽可能的要拥有公共的概念。


5. 通配符  * 

	* 选择全部标签,通常情况下用在预定义样式

6. 由基础选择器演化出的其他选择器
后代选择器
	.d1 p {} 类名是d1的标签的内部中的p标签

交集选择器 

	p.d1 选择的是类名叫做d1的p标签

并集选择器 

	.d1 ,.d2  选中d1的同时也选中d2 

子元素选择器 

	.d1 > ul  d1 的直系儿子

序列选择器  
	.uls li:first-child  选择ul下面的第一个li

	.uls li:last-child   选择ul下面的最后一个li

相邻兄弟选择器  

	.d1 + p 选中与d1 同级的并且在它下面的p 并且这个p元素与d1相邻

普通兄弟选择器
	.d1 ~ p 选中与d1 同级的并且在他下面的全部的兄弟元素


作业：

1. 3遍  

2. 整理笔记  

3. 把所有的选择器都背下来